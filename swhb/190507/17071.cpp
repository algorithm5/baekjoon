/*
숨바꼭질 5
시간 제한	메모리 제한		제출	정답	맞은 사람	정답 비율
0.25 초		512 MB			2017	306		191			18.002%
문제
수빈이는 동생과 숨바꼭질을 하고 있다. 
수빈이는 현재 점 N(0 ≤ N ≤ 500,000)에 있고, 동생은 점 K(0 ≤ K ≤ 500,000)에 있다. 
수빈이는 걷거나 순간이동을 할 수 있다. 
만약, 수빈이의 위치가 X일 때 걷는다면 1초 후에 X-1 또는 X+1로 이동하게 된다. 
순간이동을 하는 경우에는 1초 후에 2*X의 위치로 이동하게 된다. 동생은 항상 걷기만 한다. 
동생은 항상 매 초마다 이동을 하며, 이동은 가속이 붙는다. 
동생이 이동하는 거리는 이전에 이동한 거리보다 1을 더한 만큼 이동한다. 
즉, 동생의 처음 위치는 K, 1초가 지난 후 위치는 K+1, 2초가 지난 후 위치는 K+1+2, 
3초가 지난 후의 위치는 K+1+2+3이다.

수빈이와 동생의 위치가 주어졌을 때, 
수빈이가 동생을 찾을 수 있는 가장 빠른 시간이 몇 초 후인지 구하는 프로그램을 작성하시오. 
동생을 찾는 위치는 정수 좌표이어야 하고, 수빈이가 0보다 작은 좌표로,
50만보다 큰 좌표로 이동하는 것은 불가능하다.

입력
첫 번째 줄에 수빈이가 있는 위치 N과 동생이 있는 위치 K가 주어진다. N과 K는 정수이다.

출력
수빈이가 동생을 찾는 가장 빠른 시간을 출력한다. 
수빈이가 동생을 찾을 수 없거나, 찾는 위치가 500,000을 넘는 경우에는 -1을 출력한다.
*/

#include <iostream>
#include <queue>
using namespace std;

bool dp[2][500001] = {false};
queue<int> qu;
int n,k;

// 순서 설정 
int turn = 1;

void init(){
	qu.push(n);
	dp[0][n] = true;
}

int findBro(){
	
	init();
	
	// 초기에 수빈과 동생의 위치가 같을 경우를 처리 
	if(n==k){
		return 0;
	}
	
	while(!qu.empty()){
		k+=turn;
		if(k>500000){
			return -1;
		}
		
		// 이미 동생을 찾았을 경우의 시간을 출력 
		if(dp[turn%2][k]){
			return turn;
		}
		
		int size=qu.size();
        
		for(int i=0; i<size; i++){
			int tmp = qu.front();
			qu.pop();
			if(tmp+1==k || tmp-1==k || tmp*2==k){
				return turn;
			} else {
				if(tmp+1<=500000&&!dp[turn%2][tmp+1]){
					qu.push(tmp+1);
					dp[turn%2][tmp+1]=true;
				}
				if (tmp - 1 >= 0 && !dp[turn % 2][tmp - 1]) {
                    qu.push(tmp - 1);
                    dp[turn % 2][tmp - 1] = true;
                }
                if (tmp * 2 <= 500000 && !dp[turn % 2][tmp * 2]) {
                    qu.push(tmp * 2);
                    dp[turn % 2][tmp * 2] = true;
                }
			}
		}
		turn++;
	}
}
 

int main(void){
	// 수빈의 처음 위치 = n, 동생의 처음 위치 = k 
	cin>>n>>k;

	cout << findBro() << endl; 
	return 0;
}
/*
예제 입력 1 
5 17
예제 출력 1 
2
예제 입력 2 
17 5
예제 출력 2 
4
예제 입력 3 
6 6
예제 출력 3 
0
예제 입력 4 
1 500000
예제 출력 4 
-1
예제 입력 5 
250000 499999
예제 출력 5 
1
예제 입력 6 
1 10
예제 출력 6 
6
*/
